{"start":{"13":{"BEGIN":[{"statement":3,"pod":null,"time":null,"branch":null,"condition":null,"subroutine":1}]},"203":{"new":[{"condition":1,"branch":null,"subroutine":14,"time":null,"statement":42,"pod":1}]},"184":{"BEGIN":[{"pod":null,"statement":36,"time":null,"subroutine":12,"condition":null,"branch":null}]},"223":{"_setRowColNodeModule":[{"pod":2,"statement":45,"time":null,"subroutine":15,"branch":null,"condition":1}]},"233":{"parse":[{"time":null,"subroutine":16,"branch":null,"condition":1,"pod":2,"statement":48}]},"24":{"BEGIN":[{"condition":null,"branch":null,"subroutine":4,"time":null,"statement":12,"pod":null},{"statement":15,"pod":null,"time":null,"branch":null,"condition":null,"subroutine":5},{"statement":18,"pod":null,"time":null,"condition":null,"branch":null,"subroutine":6}]},"14":{"BEGIN":[{"pod":null,"statement":6,"subroutine":2,"branch":null,"condition":null,"time":null}]},"29":{"BEGIN":[{"statement":33,"pod":null,"branch":null,"condition":null,"subroutine":11,"time":null}]},"-1":{"__COVER__":[{"pod":8,"statement":186,"time":null,"subroutine":23,"condition":17,"branch":38}]},"588":{"oLocationSub":[{"time":null,"subroutine":22,"branch":36,"condition":17,"pod":7,"statement":172}]},"187":{"aPluginSyntax":[{"time":null,"subroutine":13,"condition":null,"branch":null,"pod":null,"statement":39}]},"494":{"rhTokenOfAt":[{"pod":5,"statement":136,"subroutine":20,"branch":29,"condition":13,"time":null}]},"23":{"BEGIN":[{"time":null,"condition":null,"branch":null,"subroutine":3,"statement":9,"pod":null}]},"260":{"__ANON__":[{"statement":129,"pod":3,"branch":28,"condition":13,"subroutine":17,"time":null}]},"12":{"BEGIN":[{"statement":null,"pod":null,"condition":null,"branch":null,"subroutine":null,"time":null}]},"26":{"BEGIN":[{"pod":null,"statement":24,"subroutine":8,"condition":null,"branch":null,"time":null}]},"25":{"BEGIN":[{"pod":null,"statement":21,"time":null,"subroutine":7,"branch":null,"condition":null}]},"459":{"moduleAt":[{"pod":3,"statement":129,"time":null,"subroutine":18,"branch":28,"condition":13}]},"477":{"rhMethodAt":[{"statement":133,"pod":4,"condition":13,"branch":29,"subroutine":19,"time":null}]},"28":{"BEGIN":[{"time":null,"branch":null,"condition":null,"subroutine":10,"statement":30,"pod":null}]},"524":{"parsePod":[{"pod":6,"statement":146,"subroutine":21,"branch":31,"condition":14,"time":null}]},"27":{"BEGIN":[{"time":null,"subroutine":9,"branch":null,"condition":null,"pod":null,"statement":27}]}},"pod":[[187,"aPluginSyntax"],[203,"new"],[233,"parse"],[459,"moduleAt"],[477,"rhMethodAt"],[494,"rhTokenOfAt"],[524,"parsePod"],[588,"oLocationSub"]],"statement":[12,12,12,13,13,13,14,14,14,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,26,26,26,27,27,27,28,28,28,29,29,29,184,184,181,187,188,189,203,205,207,223,225,230,233,234,237,238,239,240,241,242,243,244,245,246,256,435,260,261,262,264,269,274,275,276,279,280,289,290,291,297,298,307,308,309,310,310,311,319,320,323,324,325,325,326,333,334,336,337,338,339,341,349,353,354,361,362,364,368,369,378,379,380,381,383,394,395,401,402,403,404,406,405,417,419,432,434,437,438,439,440,441,442,444,459,460,461,462,477,478,479,494,495,497,498,499,500,501,502,503,507,524,525,527,528,529,530,532,533,534,535,536,539,540,541,542,543,544,548,549,550,551,554,559,560,562,566,588,589,591,596,597,598,601,602,603,604,606,609,614,616],"digest":"a4e377543370568b57b2dc181efdb239","branch":[[261,{"text":"unless my $oLocation = $oNode->location"}],[279,{"text":"unless ($oNode =~ /\\s/)"}],[275,{"text":"if ($pkgNode =~ /^PPI::Token::QuoteLike/ or $pkgNode =~ /^PPI::Token::Quote/) { }"}],[274,{"text":"if ($pkgNode =~ /^PPI::Token/ and $oNode->location)"}],[289,{"text":"if ($pkgNode eq 'PPI::Statement::Package')"}],[298,{"text":"if $oNode =~ /^ use \\s+ ( [A-Z][\\w:]* ) /sx"}],[297,{"text":"if ($pkgNode eq 'PPI::Statement::Include')"}],[308,{"text":"if ($oNode =~ /^ use \\s+ (?:base|parent) \\s+ (?:qw)? \\s* (.+);$/sx)"}],[307,{"text":"if ($pkgNode eq 'PPI::Statement::Include')"}],[323,{"text":"if ($oStatement =~ /\\@ISA \\s* = \\s* (.+);$/sx)"}],[319,{"text":"if ($pkgNode eq 'PPI::Token::Symbol' and $oNode eq '@ISA')"}],[338,{"text":"unless $oStatement =~ /\\@ISA \\s* , \\s* (.+)/sx"}],[336,{"text":"if ($aToken[--$prev] eq 'push' or $aToken[--$prev] eq 'push')"}],[333,{"text":"if ($pkgNode eq 'PPI::Token::Symbol' and $oNode eq '@ISA' and @aToken > 2)"}],[353,{"text":"unless ($aToken[-2]->isa('PPI::Token::Operator') and $aToken[-2] eq '->')"}],[368,{"text":"if ($oDocument->fileFindModule('nameModule', $module))"}],[362,{"text":"if ($module =~ /^ [A-Z]\\w* (?: :: [A-Z]\\w* )+ $/x) { }"}],[362,{"text":"elsif ($module =~ /^[A-Z][\\w]*$/) { }"}],[349,{"text":"if ($pkgNode eq 'PPI::Token::Word' and $oNode =~ /^[A-Z][\\w:]*$/) { }"}],[349,{"text":"elsif ($pkgNode =~ /^PPI::Token::Quote::/) { }"}],[381,{"text":"unless $oObject->isa('PPI::Token::Symbol') or $oObject->isa('PPI::Token::Word')"}],[380,{"text":"if ($oOperator->isa('PPI::Token::Operator') and $oOperator eq '->')"}],[378,{"text":"if ($pkgNode eq 'PPI::Token::Word' and @aToken > 2)"}],[394,{"text":"if ($pkgNode eq 'PPI::Token::Pod')"}],[402,{"text":"if $pkgNode eq 'PPI::Statement::Sub' and not $oNode->forward"}],[403,{"text":"if $pkgNode eq 'PPI::Statement::Scheduled'"}],[404,{"text":"if ($nameSub)"}],[432,{"text":"if $@"}],[461,{"text":"unless my $rhToken = $self->rhTokenOfAt($self->rhRowColModule, $row, $col)"}],[497,{"text":"unless my $rhCol = $$rhRowCol{$row}"}],[502,{"text":"if ($col >= $colToken and $col < $colTokenEnd)"}],[535,{"text":"if @$raPodHeadingCurrent > $headingLevel"}],[534,{"text":"if ($headingLevel)"}],[542,{"text":"unless defined $heading"}],[543,{"text":"if $level < $headingLevel - 1 or $headingLevel == 0"}],[532,{"text":"if ($line =~ /^ (?: =head(\\d+)\\b ) | (?: =item\\b )/x)"}],[604,{"text":"if $oNode =~ /\\n([^\\n]+?)\\z/"}],[603,{"text":"if ($countNewline) { }"}]],"condition":[[188,{"left":"$raPluginSyntax","type":"or_2","right":"[$self->raPluginSyntax]","op":"||="}],[274,{"type":"and_3","right":"$oNode->location","op":"and","left":"$pkgNode =~ /^PPI::Token/"}],[275,{"left":"$pkgNode =~ /^PPI::Token::QuoteLike/","type":"or_3","right":"$pkgNode =~ /^PPI::Token::Quote/","op":"or"}],[319,{"left":"$pkgNode eq 'PPI::Token::Symbol'","type":"and_3","right":"$oNode eq '@ISA'","op":"and"}],[333,{"type":"and_3","op":"and","right":"$oNode eq '@ISA'","left":"$pkgNode eq 'PPI::Token::Symbol'"}],[333,{"type":"and_3","right":"@aToken > 2","op":"and","left":"$pkgNode eq 'PPI::Token::Symbol' and $oNode eq '@ISA'"}],[336,{"left":"$aToken[--$prev] eq 'push'","op":"or","right":"$aToken[--$prev] eq 'push'","type":"or_3"}],[349,{"right":"$oNode =~ /^[A-Z][\\w:]*$/","op":"and","type":"and_3","left":"$pkgNode eq 'PPI::Token::Word'"}],[353,{"left":"$aToken[-2]->isa('PPI::Token::Operator')","right":"$aToken[-2] eq '->'","op":"and","type":"and_3"}],[378,{"right":"@aToken > 2","op":"and","type":"and_3","left":"$pkgNode eq 'PPI::Token::Word'"}],[380,{"left":"$oOperator->isa('PPI::Token::Operator')","type":"and_3","right":"$oOperator eq '->'","op":"and"}],[381,{"left":"$oObject->isa('PPI::Token::Symbol')","type":"or_3","op":"or","right":"$oObject->isa('PPI::Token::Word')"}],[402,{"left":"$pkgNode eq 'PPI::Statement::Sub'","op":"and","right":"not $oNode->forward","type":"and_3"}],[502,{"type":"and_3","right":"$col < $colTokenEnd","op":"and","left":"$col >= $colToken"}],[533,{"left":"$1","type":"or_2","op":"||","right":"0"}],[543,{"left":"$level < $headingLevel - 1","type":"or_3","op":"or","right":"$headingLevel == 0"}],[550,{"type":"and_3","right":"not $aLine[$linePod] =~ /^=/","op":"and","left":"defined $aLine[$linePod]"}]],"file":"lib/Devel/PerlySense/Document/Meta.pm","subroutine":[[12,"BEGIN"],[13,"BEGIN"],[14,"BEGIN"],[23,"BEGIN"],[24,"BEGIN"],[24,"BEGIN"],[24,"BEGIN"],[25,"BEGIN"],[26,"BEGIN"],[27,"BEGIN"],[28,"BEGIN"],[29,"BEGIN"],[184,"BEGIN"],[187,"aPluginSyntax"],[203,"new"],[223,"_setRowColNodeModule"],[233,"parse"],[260,"__ANON__"],[459,"moduleAt"],[477,"rhMethodAt"],[494,"rhTokenOfAt"],[524,"parsePod"],[588,"oLocationSub"]]}